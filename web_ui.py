import streamlit as st
import requests

# -----------------------
# ‡πÇ‡∏•‡πÇ‡∏Å‡πâ
# -----------------------
st.image("https://i.imgur.com/OG5xKXW.png", width=100)  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏°‡∏∂‡∏á‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ
st.title("LLM Web Interface üåç")

# -----------------------
# ‡∏†‡∏≤‡∏©‡∏≤
# -----------------------
lang = st.radio("üåê ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏©‡∏≤", ["English", "‡πÑ‡∏ó‡∏¢"])

# -----------------------
# ‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
# -----------------------
prompt = st.text_input("‚úçÔ∏è ‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:")

# -----------------------
# Translate ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á (‡πÉ‡∏ä‡πâ LibreTranslate API demo)
# -----------------------
def translate(text, src, tgt):
    try:
        res = requests.post("https://libretranslate.de/translate", data={
            "q": text,
            "source": src,
            "target": tgt,
            "format": "text"
        })
        return res.json()["translatedText"]
    except:
        return text  # fallback

# -----------------------
# ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
# -----------------------
if st.button("üöÄ ‡∏ñ‡∏≤‡∏°‡πÄ‡∏•‡∏¢"):
    if lang == "‡πÑ‡∏ó‡∏¢":
        translated_prompt = translate(prompt, "th", "en")
    else:
        translated_prompt = prompt

    # ‡∏™‡πà‡∏á prompt ‡πÑ‡∏õ‡∏¢‡∏±‡∏á FastAPI
    try:
        response = requests.get("http://llm-api:8000/predict", params={"prompt": translated_prompt})
        raw_output = response.json()["response"]
    except Exception as e:
        st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        raw_output = ""

    # ‡πÅ‡∏õ‡∏•‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)
    if lang == "‡πÑ‡∏ó‡∏¢" and raw_output:
        final_output = translate(raw_output, "en", "th")
    else:
        final_output = raw_output

    st.markdown("### ü§ñ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö")
    st.write(final_output)